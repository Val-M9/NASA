{"version":3,"sources":["api/api.js","components/Pages.js","pages/MarsPhotos/Spirit.js"],"names":["key","api","axios","baseURL","apodAPI","date","a","get","response","data","asteroidsAPI","startDate","endDate","marsAPI","curiosityGetPhotos","camera","curiosityGetManifest","photo_manifest","spiritGetPhotos","spiritGetManifest","opportunityGetManifest","opportunityGetPhotos","Pages","photosPerPage","changePageHandler","photosCount","defaultCurrent","total","pageSize","onChange","showSizeChanger","hideOnSinglePage","Spirit","Option","Select","history","useHistory","useState","spirit","setSpirit","photos","setPhotos","setCamera","setDate","offset","setOffset","currentPagePhotos","setCurrentPagePhotos","photosRef","useRef","current","setPhotosForCurrentPage","useCallback","slice","useEffect","result","defaultDate","moment","console","log","className","onClick","push","ROUTES","MARS_ROVERS","value","defaultValue","style","width","required","d","day","_d","getDate","parseInt","toISOString","split","disabledDate","start","landing_date","end","max_date","defaultPickerValue","length","map","photo","src","img_src","alt","id","loader","pageNumber","window","scrollTo","top","behavior"],"mappings":"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","file":"static/js/9.6f73221d.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst key = \"iEipFDdtgYJAMcIUbIV9NGg27OwVNaXRdtdVhKhc\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.nasa.gov/\",\r\n});\r\n\r\nexport async function apodAPI(date) {\r\n  const response = await api.get(`planetary/apod?&date=${date}&api_key=${key}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function asteroidsAPI(startDate, endDate) {\r\n  const response = await api.get(\r\n    `neo/rest/v1/feed?start_date=${startDate}&end_date=${endDate}&api_key=${key}`,\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport const marsAPI = {\r\n  async curiosityGetPhotos(camera, date) {\r\n    const { data } = await api.get(\r\n      `/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${date}&camera=${camera}&api_key=${key}`,\r\n    );\r\n    return data;\r\n  },\r\n  async curiosityGetManifest() {\r\n    const { data } = await api.get(`/mars-photos/api/v1/manifests/curiosity?api_key=${key}`);\r\n    return data.photo_manifest;\r\n  },\r\n\r\n  async spiritGetPhotos(camera, date) {\r\n    const { data } = await api.get(\r\n      `/mars-photos/api/v1/rovers/spirit/photos?earth_date=${date}&camera=${camera}&api_key=${key}`,\r\n    );\r\n    return data;\r\n  },\r\n  async spiritGetManifest() {\r\n    const { data } = await api.get(`/mars-photos/api/v1/manifests/spirit?api_key=${key}`);\r\n    return data.photo_manifest;\r\n  },\r\n\r\n  async opportunityGetManifest() {\r\n    const { data } = await api.get(`/mars-photos/api/v1/manifests/opportunity?api_key=${key}`);\r\n    return data.photo_manifest;\r\n  },\r\n  async opportunityGetPhotos(camera, date) {\r\n    const { data } = await api.get(\r\n      `/mars-photos/api/v1/rovers/opportunity/photos?earth_date=${date}&camera=${camera}&api_key=${key}`,\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import { Pagination } from \"antd\";\r\n\r\nconst Pages = ({ photosPerPage, changePageHandler, photosCount }) => {\r\n  return (\r\n    <>\r\n      <Pagination\r\n        defaultCurrent={1}\r\n        total={photosCount}\r\n        pageSize={photosPerPage}\r\n        onChange={changePageHandler}\r\n        showSizeChanger={false}\r\n        hideOnSinglePage\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n","import { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { DoubleLeftOutlined } from \"@ant-design/icons\";\r\nimport { DatePicker, Select } from \"antd\";\r\nimport { ROUTES } from \"../../constants/routes\";\r\nimport { marsAPI } from \"../../api/api\";\r\nimport Pages from \"../../components/Pages\";\r\nimport loader from \"../../assets/loader/Ripple-1.4s-200px.svg\";\r\n\r\nconst Spirit = () => {\r\n  const { Option } = Select;\r\n  const history = useHistory();\r\n  const [spirit, setSpirit] = useState(null);\r\n  const [photos, setPhotos] = useState([]);\r\n  const [camera, setCamera] = useState(\"\");\r\n  const [date, setDate] = useState(0);\r\n\r\n  // For Pagination\r\n  const photosPerPage = 25;\r\n  const [offset, setOffset] = useState(0);\r\n  const [currentPagePhotos, setCurrentPagePhotos] = useState([]);\r\n\r\n  const photosRef = useRef();\r\n  photosRef.current = photos;\r\n\r\n  const setPhotosForCurrentPage = useCallback(() => {\r\n    setCurrentPagePhotos(photosRef.current.slice(offset, offset + photosPerPage));\r\n  }, [photosRef, offset]);\r\n\r\n  const changePageHandler = (pageNumber) => {\r\n    const currentPage = pageNumber - 1;\r\n    const offset = currentPage * photosPerPage;\r\n    setOffset(offset);\r\n    setPhotosForCurrentPage();\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const result = async () => {\r\n      const response = await marsAPI.spiritGetManifest();\r\n      setSpirit(response);\r\n    };\r\n    result();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const result = async () => {\r\n      const response = await marsAPI.spiritGetPhotos(camera, date);\r\n      setPhotos(response.photos);\r\n      setPhotosForCurrentPage();\r\n    };\r\n    result();\r\n  }, [camera, date, setPhotosForCurrentPage]);\r\n\r\n  const changeCameraHandler = (value) => {\r\n    setCamera(value);\r\n  };\r\n  const changeDateHandler = (d) => {\r\n    const day = d._d;\r\n    day.setDate(day.getDate() + parseInt(1));\r\n    setDate(day.toISOString().split(\"T\")[0]);\r\n    day.setDate(day.getDate() - parseInt(1));\r\n    return date;\r\n  };\r\n\r\n  const disabledDate = (current) => {\r\n    if (spirit) {\r\n      const start = moment(spirit.landing_date, \"YYYY-MM-DD\");\r\n      const end = moment(spirit.max_date, \"YYYY-MM-DD\");\r\n      return current <= start || current > end;\r\n    }\r\n  };\r\n  const defaultDate = moment(\"2004-01-01\", \"YYYY-MM-DD\");\r\n\r\n  console.log(\"spirit\", spirit);\r\n  console.log(date);\r\n  console.log(photos);\r\n\r\n  return (\r\n    <div className=\"rover--wrapper\">\r\n      <div className=\"rover--header\">\r\n        <button className=\"rover--button-back\" onClick={() => history.push(ROUTES.MARS_ROVERS)}>\r\n          <DoubleLeftOutlined /> Back\r\n        </button>\r\n        <h1>Spirit</h1>\r\n        <p className=\"rover--description\">\r\n          Spirit, also known as MER-A (Mars Exploration Rover – A) or MER-2, is a robotic rover on\r\n          Mars, active from 2004 to 2010. Spirit was operational on Mars for 2208 sols (2249 days; 6\r\n          years, 77 days). It was one of two rovers of NASA's Mars Exploration Rover Mission managed\r\n          by the Jet Propulsion Laboratory (JPL). Spirit landed successfully within the impact\r\n          crater Gusev on Mars at 04:35 Ground UTC on <b>January 4, 2004</b>, three weeks before its\r\n          twin, Opportunity (MER-B), which landed on the other side of the planet.\r\n        </p>\r\n        <p className=\"rover--description\">\r\n          On May 1, 2009 (5 years, 3 months, 27 Earth days after landing; 21 times the planned\r\n          mission duration), Spirit became stuck in soft sand. The rover continued in a stationary\r\n          science platform role until communication with Spirit stopped on March 22, 2010 (sol\r\n          2208). JPL continued to attempt to regain contact until May 24, 2011, when NASA announced\r\n          that efforts to communicate with the unresponsive rover had ended, calling the mission\r\n          complete. A formal farewell took place at NASA headquarters shortly thereafter.\r\n        </p>\r\n        <p className=\"rover--description bordered\">\r\n          Choose the date and select one of the rover's camera to see the photos taken.\r\n        </p>\r\n        <form className=\"rover--form\">\r\n          <Select\r\n            className=\"rover--form-item\"\r\n            onChange={changeCameraHandler}\r\n            defaultValue=\"Choose the Camera\"\r\n            style={{ width: 250 }}\r\n            required>\r\n            <Option value=\"FHAZ\">Front Hazard Avoidance Camera</Option>\r\n            <Option value=\"RHAZ\">Rear Hazard Avoidance Camera </Option>\r\n            <Option value=\"NAVCAM\">Navigation Camera</Option>\r\n            <Option value=\"PANCAM\">Panoramic Camera</Option>\r\n            <Option value=\"MINITES\">Miniature Thermal Emission Spectrometer</Option>\r\n          </Select>\r\n          <DatePicker\r\n            className=\"rover--form-item\"\r\n            onChange={changeDateHandler}\r\n            disabledDate={disabledDate}\r\n            defaultPickerValue={defaultDate}\r\n          />\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          {photos && photos.length > 0 ? (\r\n            <>\r\n              <div className=\"rover--photo\">\r\n                {photos.length > 1 ? (\r\n                  <p className=\"rover--p bordered\">\r\n                    {photos.length} photos were taken by {camera} camera on {date}.\r\n                  </p>\r\n                ) : (\r\n                  <p className=\"rover--p bordered\">\r\n                    {photos.length} photo was taken by {camera} camera on {date}.\r\n                  </p>\r\n                )}\r\n                {currentPagePhotos.length > 0 ? (\r\n                  currentPagePhotos.map((photo) => (\r\n                    <img\r\n                      className=\"rover--photo-item\"\r\n                      key={photo.id}\r\n                      src={photo.img_src}\r\n                      alt=\"mars\"\r\n                    />\r\n                  ))\r\n                ) : (\r\n                  <img className=\"loader\" src={loader} alt=\"Loader gif\" />\r\n                )}\r\n              </div>\r\n              <div className=\"center\">\r\n                <Pages\r\n                  photosPerPage={photosPerPage}\r\n                  changePageHandler={changePageHandler}\r\n                  photosCount={photos.length}\r\n                  photos={photos}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : date ? (\r\n            <h2 className=\"text-red\">Sorry, it appears no photo from this camera on {date}.</h2>\r\n          ) : (\r\n            <h2 className=\"text-red\">Please select rover's camera and date.</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spirit;\r\n"],"sourceRoot":""}