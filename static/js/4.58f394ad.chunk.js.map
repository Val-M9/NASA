{"version":3,"sources":["api/api.js","pages/NearEarthObjects/NEOItems.js","pages/NearEarthObjects/NearEarthObjects.js"],"names":["key","api","axios","baseURL","apodAPI","date","a","get","response","data","asteroidsAPI","startDate","endDate","NEOItems","console","log","className","Object","entries","near_earth_objects","sort","map","item","obj","name","estimated_diameter","meters","estimated_diameter_min","toFixed","estimated_diameter_max","is_potentially_hazardous_asteroid","href","nasa_jpl_url","target","rel","src","loader","alt","NearEarthObjects","useState","setData","setStartDate","setEndDate","useEffect","result","today","Date","now","toISOString","split","onChange","d","_d"],"mappings":"wNAEMA,EAAM,2CAENC,EAAMC,SAAa,CACvBC,QAAS,0BAGJ,SAAeC,EAAtB,kC,4CAAO,WAAuBC,GAAvB,eAAAC,EAAA,sEACkBL,EAAIM,IAAJ,+BAAgCF,EAAhC,oBAAgDL,IADlE,cACCQ,EADD,yBAEEA,EAASC,MAFX,4C,sBAKA,SAAeC,EAAtB,oC,4CAAO,WAA4BC,EAAWC,GAAvC,eAAAN,EAAA,sEACkBL,EAAIM,IAAJ,sCACUI,EADV,qBACgCC,EADhC,oBACmDZ,IAFrE,cACCQ,EADD,yBAIEA,EAASC,MAJX,4C,gJC+CQI,EA1DE,SAAC,GAAc,IAAZJ,EAAW,EAAXA,KAElB,OADAK,QAAQC,IAAIN,GAEV,mCACGA,EACC,wBAAOO,UAAU,kBAAjB,UACE,gCACE,+BACE,oBAAIA,UAAU,eAAd,kBACA,oBAAIA,UAAU,eAAd,kBACA,oBAAIA,UAAU,eAAd,yCACA,oBAAIA,UAAU,eAAd,kCACA,oBAAIA,UAAU,eAAd,mCAGHC,OAAOC,QAAQT,EAAKU,oBAClBC,OACAC,KAAI,SAACC,GACJ,OACE,gCACGA,EAAK,GAAGD,KAAI,SAACE,GACZ,OACE,+BACE,oBAAIP,UAAU,eAAd,SACE,4BAAIM,EAAK,OAEX,oBAAIN,UAAU,eAAd,SAA8BO,EAAIC,OAClC,qBAAIR,UAAU,eAAd,UACE,oCAAW,IACVO,EAAIE,mBAAmBC,OAAOC,uBAAuBC,QAAQ,GAC9D,uBACA,oCAAW,IACVL,EAAIE,mBAAmBC,OAAOG,uBAAuBD,QAAQ,MAE/DL,EAAIO,kCACH,oBAAId,UAAU,mBAAd,iBAEA,oBAAIA,UAAU,qBAAd,gBAEF,oBAAIA,UAAU,eAAd,SACE,mBAAGe,KAAMR,EAAIS,aAAcC,OAAO,SAASC,IAAI,sBAA/C,SACGX,EAAIS,mBAnBFT,EAAIC,UAHPF,EAAK,UAiCzB,qBAAKN,UAAU,SAASmB,IAAKC,IAAQC,IAAI,kBCJlCC,UA7CU,WACvB,MAAwBC,mBAAS,MAAjC,mBAAO9B,EAAP,KAAa+B,EAAb,KACA,EAAkCD,mBAAS,IAA3C,mBAAO5B,EAAP,KAAkB8B,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgB8B,EAAhB,KAEAC,qBAAU,WACR,IAAIC,EAAM,uCAAG,4BAAAtC,EAAA,sEACYI,YAAaC,GAAakC,EAAOjC,GAD7C,QACLJ,EADK,SAECgC,EAAQhC,GAFT,2CAAH,qDAIVoC,MACC,CAACjC,EAAWC,IAEf,IAAMiC,EAAQ,IAAIC,KAAKA,KAAKC,OAAOC,cAAcC,MAAM,KAAK,GAS5D,OACE,gCACE,gEACA,oBAAGjC,UAAU,wBAAb,wGAC8F,OAE9F,sBAAKA,UAAU,aAAf,UACE,cAAC,IAAD,CAAYkC,SAda,SAACC,GAC9BV,EAAaU,GAAKA,EAAEC,GAAGJ,cAAcC,MAAM,KAAK,OAc5C,sBAAMjC,UAAU,kBAAhB,+DACA,cAAC,IAAD,CAAYkC,SAbW,SAACC,GAC5BT,EAAWS,GAAKA,EAAEC,GAAGJ,cAAcC,MAAM,KAAK,OAa1C,sBAAMjC,UAAU,kBAAhB,qFAIDJ,GAAWD,GAAyB,KAAZC,EACvB,cAAC,EAAD,CAAUH,KAAMA,IAEhB,mBAAGO,UAAU,4BAAb","file":"static/js/4.58f394ad.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst key = \"iEipFDdtgYJAMcIUbIV9NGg27OwVNaXRdtdVhKhc\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.nasa.gov/\",\r\n});\r\n\r\nexport async function apodAPI(date) {\r\n  const response = await api.get(`planetary/apod?&date=${date}&api_key=${key}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function asteroidsAPI(startDate, endDate) {\r\n  const response = await api.get(\r\n    `neo/rest/v1/feed?start_date=${startDate}&end_date=${endDate}&api_key=${key}`,\r\n  );\r\n  return response.data;\r\n}\r\n","import loader from \"../../assets/loader/Ripple-1.4s-200px.svg\";\r\n\r\nconst NEOItems = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <table className=\"asteroids-table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"asteroids-td\">Date</th>\r\n              <th className=\"asteroids-td\">Name</th>\r\n              <th className=\"asteroids-td\">Estimated diameter (meters)</th>\r\n              <th className=\"asteroids-td\">Potentialy hazardous</th>\r\n              <th className=\"asteroids-td\">More Information</th>\r\n            </tr>\r\n          </thead>\r\n          {Object.entries(data.near_earth_objects)\r\n            .sort()\r\n            .map((item) => {\r\n              return (\r\n                <tbody key={item[0]}>\r\n                  {item[1].map((obj) => {\r\n                    return (\r\n                      <tr key={obj.name}>\r\n                        <td className=\"asteroids-td\">\r\n                          <b>{item[0]}</b>\r\n                        </td>\r\n                        <td className=\"asteroids-td\">{obj.name}</td>\r\n                        <td className=\"asteroids-td\">\r\n                          <b>min</b>{\" \"}\r\n                          {obj.estimated_diameter.meters.estimated_diameter_min.toFixed(2)}\r\n                          <br />\r\n                          <b>max</b>{\" \"}\r\n                          {obj.estimated_diameter.meters.estimated_diameter_max.toFixed(2)}\r\n                        </td>\r\n                        {obj.is_potentially_hazardous_asteroid ? (\r\n                          <td className=\"red asteroids-td\">Yes</td>\r\n                        ) : (\r\n                          <td className=\"green asteroids-td\">No</td>\r\n                        )}\r\n                        <td className=\"asteroids-td\">\r\n                          <a href={obj.nasa_jpl_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {obj.nasa_jpl_url}\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              );\r\n            })}\r\n        </table>\r\n      ) : (\r\n        <img className=\"loader\" src={loader} alt=\"Loader gif\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NEOItems;\r\n","import { DatePicker } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { asteroidsAPI } from \"../../api/api\";\r\nimport NEOItems from \"./NEOItems\";\r\n\r\nconst NearEarthObjects = () => {\r\n  const [data, setData] = useState(null);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let result = async () => {\r\n      const response = await asteroidsAPI(startDate || today, endDate);\r\n      response && setData(response);\r\n    };\r\n    result();\r\n  }, [startDate, endDate]);\r\n\r\n  const today = new Date(Date.now()).toISOString().split(\"T\")[0];\r\n\r\n  const changeStartDateHandler = (d) => {\r\n    setStartDate(d && d._d.toISOString().split(\"T\")[0]);\r\n  };\r\n  const changeEndDateHandler = (d) => {\r\n    setEndDate(d && d._d.toISOString().split(\"T\")[0]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Near Earth Objects - Asteroids</h1>\r\n      <p className=\"asteroids-description\">\r\n        On this page you can choose dates and see information about near-Earth asteroids these days{\" \"}\r\n      </p>\r\n      <div className=\"datepicker\">\r\n        <DatePicker onChange={changeStartDateHandler} />\r\n        <span className=\"datepicker-span\">Please choose the start date (by default - today)</span>\r\n        <DatePicker onChange={changeEndDateHandler} />\r\n        <span className=\"datepicker-span\">\r\n          Pick the end date (should not be later than 7 days after start date)\r\n        </span>\r\n      </div>\r\n      {endDate >= startDate || endDate === \"\" ? (\r\n        <NEOItems data={data} />\r\n      ) : (\r\n        <p className=\"asteroids-description red\">End date must be greater then start date!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearEarthObjects;\r\n"],"sourceRoot":""}