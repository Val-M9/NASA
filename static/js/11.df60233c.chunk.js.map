{"version":3,"sources":["api/api.js","pages/NearEarthObjects/NEOItems.js","pages/NearEarthObjects/NearEarthObjects.js"],"names":["key","api","axios","baseURL","apodAPI","date","a","get","response","data","asteroidsAPI","startDate","endDate","marsAPI","curiosityGetPhotos","camera","curiosityGetManifest","photo_manifest","spiritGetPhotos","spiritGetManifest","opportunityGetManifest","opportunityGetPhotos","NEOItems","className","Object","entries","near_earth_objects","sort","map","item","obj","name","estimated_diameter","meters","estimated_diameter_min","toFixed","estimated_diameter_max","is_potentially_hazardous_asteroid","href","nasa_jpl_url","target","rel","src","loader","alt","NearEarthObjects","useState","setData","setStartDate","setEndDate","startDateForCampare","setDateForCompare","endDateForCampare","setEndDateForCompare","isLoading","setIsLoading","useEffect","result","today","Date","now","toISOString","split","datesCompare","dataAttr","onChange","d","_d"],"mappings":"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","file":"static/js/11.df60233c.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst key = \"iEipFDdtgYJAMcIUbIV9NGg27OwVNaXRdtdVhKhc\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.nasa.gov/\",\r\n});\r\n\r\nexport async function apodAPI(date) {\r\n  const response = await api.get(`planetary/apod?&date=${date}&api_key=${key}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function asteroidsAPI(startDate, endDate) {\r\n  const response = await api.get(\r\n    `neo/rest/v1/feed?start_date=${startDate}&end_date=${endDate}&api_key=${key}`,\r\n  );\r\n  return response.data;\r\n}\r\n\r\nexport const marsAPI = {\r\n  async curiosityGetPhotos(camera, date) {\r\n    const { data } = await api.get(\r\n      `/mars-photos/api/v1/rovers/curiosity/photos?earth_date=${date}&camera=${camera}&api_key=${key}`,\r\n    );\r\n    return data;\r\n  },\r\n  async curiosityGetManifest() {\r\n    const { data } = await api.get(`/mars-photos/api/v1/manifests/curiosity?api_key=${key}`);\r\n    return data.photo_manifest;\r\n  },\r\n\r\n  async spiritGetPhotos(camera, date) {\r\n    const { data } = await api.get(\r\n      `/mars-photos/api/v1/rovers/spirit/photos?earth_date=${date}&camera=${camera}&api_key=${key}`,\r\n    );\r\n    return data;\r\n  },\r\n  async spiritGetManifest() {\r\n    const { data } = await api.get(`/mars-photos/api/v1/manifests/spirit?api_key=${key}`);\r\n    return data.photo_manifest;\r\n  },\r\n\r\n  async opportunityGetManifest() {\r\n    const { data } = await api.get(`/mars-photos/api/v1/manifests/opportunity?api_key=${key}`);\r\n    return data.photo_manifest;\r\n  },\r\n  async opportunityGetPhotos(camera, date) {\r\n    const { data } = await api.get(\r\n      `/mars-photos/api/v1/rovers/opportunity/photos?earth_date=${date}&camera=${camera}&api_key=${key}`,\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import loader from \"../../assets/loader/Ripple-1.4s-200px.svg\";\r\n\r\nconst NEOItems = ({ data }) => {\r\n  return (\r\n    <>\r\n      {data ? (\r\n        <table className=\"asteroids-table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"asteroids-td\">Date</th>\r\n              <th className=\"asteroids-td\">Name</th>\r\n              <th className=\"asteroids-td\">Estimated diameter (meters)</th>\r\n              <th className=\"asteroids-td\">Potentialy hazardous</th>\r\n              <th className=\"asteroids-td\">More Information</th>\r\n            </tr>\r\n          </thead>\r\n          {Object.entries(data.near_earth_objects)\r\n            .sort()\r\n            .map((item) => {\r\n              return (\r\n                <tbody key={item[0]}>\r\n                  {item[1].map((obj) => {\r\n                    return (\r\n                      <tr key={obj.name}>\r\n                        <td className=\"asteroids-td\">\r\n                          <b>{item[0]}</b>\r\n                        </td>\r\n                        <td className=\"asteroids-td\">{obj.name}</td>\r\n                        <td className=\"asteroids-td\">\r\n                          <b>min</b>{\" \"}\r\n                          {obj.estimated_diameter.meters.estimated_diameter_min.toFixed(2)}\r\n                          <br />\r\n                          <b>max</b>{\" \"}\r\n                          {obj.estimated_diameter.meters.estimated_diameter_max.toFixed(2)}\r\n                        </td>\r\n                        {obj.is_potentially_hazardous_asteroid ? (\r\n                          <td className=\"red asteroids-td\">Yes</td>\r\n                        ) : (\r\n                          <td className=\"green asteroids-td\">No</td>\r\n                        )}\r\n                        <td className=\"asteroids-td\">\r\n                          <a href={obj.nasa_jpl_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {obj.nasa_jpl_url}\r\n                          </a>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              );\r\n            })}\r\n        </table>\r\n      ) : (\r\n        <img className=\"loader\" src={loader} alt=\"Loader gif\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NEOItems;\r\n","import { DatePicker } from \"antd\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { asteroidsAPI } from \"../../api/api\";\r\nimport NEOItems from \"./NEOItems\";\r\nimport loader from \"../../assets/loader/Ripple-1.4s-200px.svg\";\r\n\r\nconst NearEarthObjects = () => {\r\n  const [data, setData] = useState(null);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [startDateForCampare, setDateForCompare] = useState(0);\r\n  const [endDateForCampare, setEndDateForCompare] = useState(0);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let result = async () => {\r\n      setIsLoading(true);\r\n      const response = await asteroidsAPI(startDate || today, endDate);\r\n      response && setData(response);\r\n      setIsLoading(false);\r\n    };\r\n    result();\r\n  }, [startDate, endDate]);\r\n\r\n  const today = new Date(Date.now()).toISOString().split(\"T\")[0];\r\n\r\n  const changeStartDateHandler = (d) => {\r\n    setStartDate(d && d._d.toISOString().split(\"T\")[0]);\r\n    setDateForCompare(d._d);\r\n  };\r\n  const changeEndDateHandler = (d) => {\r\n    setEndDate(d && d._d.toISOString().split(\"T\")[0]);\r\n    setEndDateForCompare(d._d);\r\n  };\r\n  // end date must not be greater than week compare to start date\r\n  const week = 691199999;\r\n  const datesCompare = endDateForCampare - startDateForCampare;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Near Earth Objects - Asteroids</h1>\r\n      <p className=\"asteroids-description\">\r\n        Choose dates and see information about near-Earth asteroids these days.\r\n      </p>\r\n      <div className=\"datepicker\">\r\n        <div\r\n          className=\"datepicker-item\"\r\n          dataAttr=\"Please choose the start date (by default - today)\">\r\n          <DatePicker onChange={changeStartDateHandler} />\r\n        </div>\r\n        <span className=\"datepicker-span\">Start date</span>\r\n        <div\r\n          className=\"datepicker-item\"\r\n          dataAttr=\"Pick the end date (should not be later than 7 days after start date)\">\r\n          <DatePicker onChange={changeEndDateHandler} />\r\n        </div>\r\n        <span className=\"datepicker-span\">End date</span>\r\n      </div>\r\n      {datesCompare > week ? (\r\n        <p className=\"asteroids-description red\">One week range please!</p>\r\n      ) : endDate >= startDate || endDate === \"\" ? (\r\n        isLoading ? (\r\n          <img src={loader} className=\"loader\" alt=\"Loading\" />\r\n        ) : (\r\n          <NEOItems data={data} />\r\n        )\r\n      ) : (\r\n        <p className=\"asteroids-description red\">End date must be greater then start date!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NearEarthObjects;\r\n"],"sourceRoot":""}